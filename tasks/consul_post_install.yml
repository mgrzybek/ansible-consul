- name: Post-Install | Generate gossip encryption key
  when: consul_encrypt is not defined
  run_once: true
  block:
  - name: Post-Install | Generate keygen
    command: consul keygen
    register: consul_keygen

  - name: Post-Install | Set local fact (consul_encrypt)
    set_fact: consul_encrypt="{{ consul_keygen.stdout }}"

- name: Post-Install | Sysconfig
  template: src=consul.sysconfig.j2 dest={{ consul_sysconfig }} mode=600
  notify: restart consul

- name: Post-Install | Consul configuration file
  notify: restart consul
  template:
    owner: consul
    group: consul
    src: consul.hcl.j2
    dest: '{{ consul_conf_file }}'
    mode: 0600

- name: Post-Install | Systemd services
  when: ansible_distribution | lower == "linux"
  notify: reload systemd
  template: src=consul.service.j2 dest=/etc/systemd/system/consul.service

- name: Post-Install | Consul monitoring
  when:
  - consul_ui | lower == 'true'
  with_items: '{{ consul_ui_service }}'
  notify: reload consul
  template:
    src: service.consul.json.j2
    dest: "{{ consul_conf_dir }}/{{ item.service.name }}.json"

- name: Post-Install | Telegraf configuration
  when:
  - configure_telegraf | lower == 'true'
  notify: restart telegraf
  template: src=consul.telegraf.conf.j2 dest={{ consul_telegraf_conf_file }}

- name: Post-Install | Kernel capabilities
  when:
  - ansible_distribution | lower == "linux"
  - install_consul | lower == 'true'
  - consul_dns_port < 1024
  command: setcap cap_net_bind_service=+ep /usr/local/bin/consul

- name: Post-Install | Autostart consul
  service: name=consul state=started enabled=yes

- meta: flush_handlers

- name: Post-Install | ACLs post-configuration
  when:
  - consul_enable_acl | lower == 'true'
  - consul_server_mode | lower == 'true'
  run_once: true
  block:
  - name: Post-Install | Wait for Consul to be online
    wait_for: port=8500 timeout=20

  - name: Post-Install | Wait for consul quorum
    until: catalog_info.stderr.find('403') > -1
    ignore_errors: yes
    retries: 300
    delay: 10
    register: catalog_info
    command: consul catalog services

  - name: Post-Install | Bootstrap ACL
    until: acl_info is success or acl_info.stdout.find("no longer") > -1
    retries: 5
    delay: 2
    register: acl_info
    command: consul acl bootstrap

  - name: Post-Install | ACL not set
    when: acl_info.stdout.find("no longer") < 0
    block:
    - name: Post-Install | Set acl facts
      set_fact:
        acl_secret_id: "{{ acl_info.stdout_lines[1] | regex_replace('^.+:\\s+','') }}"

    - name: Post-Install | Create some rules
      template: src=policy.hcl.j2 dest=/tmp/policy.hcl

    - name: Post-Install | Apply the rules
      command: >
        consul acl policy create \
            -name "nodes" \
            -description="Policy used by nodes" \
            -rules @/tmp/policy.hcl
      environment:
        CONSUL_HTTP_TOKEN: '{{ acl_secret_id }}'

    - name: Post-Install | Clean-up
      file: path=/tmp/policy.hcl state=absent

    - name: Post-Install | Store token
      import_tasks: consul_post_install_token.yml
